
import os
import tkinter as tk
from tkinter import filedialog
from datetime import datetime
import exifread

def форматировать_время(временная_метка):
    return datetime.fromtimestamp(временная_метка).strftime('%Y-%m-%d %A %H:%M:%S')

def получить_всю_метаданные(путь_к_файлу):
    метаданные = "Метаданные:\n"

    if os.path.exists(путь_к_файлу):
        # Добавим основную информацию о файле
        размер_файла = os.path.getsize(путь_к_файлу)
        время_создания = os.path.getctime(путь_к_файлу)
        время_изменения = os.path.getmtime(путь_к_файлу)
        метаданные += f"Размер файла: {размер_файла} байт\n"
        метаданные += f"Время создания: {форматировать_время(время_создания)}\n"
        метаданные += f"Время изменения: {форматировать_время(время_изменения)}\n\n"

        try:
            # Попробуем получить метаданные изображения с использованием exifread
            with open(путь_к_файлу, 'rb') as f:
                теги = exifread.process_file(f)
                for тег, значение in теги.items():
                    метаданные += f"{тег}: {значение}\n"
        except Exception as e:
            метаданные += f"Ошибка при чтении данных EXIF: {e}\n"
    else:
        метаданные = "Файл не найден"

    return метаданные

def открыть_диалоговое_окно():
    путь_к_файлу = filedialog.askopenfilename(title="Выберите файл")
    if путь_к_файлу:
        метаданные = получить_всю_метаданные(путь_к_файлу)
        текст_результата.config(state=tk.NORMAL)
        текст_результата.delete(1.0, tk.END)
        текст_результата.insert(tk.END, метаданные)
        текст_результата.config(state=tk.DISABLED)

# Создание главного окна
корень = tk.Tk()
корень.title("Просмотрщик метаданных")

# Кнопка для выбора файла
кнопка_открыть = tk.Button(корень, text="Открыть файл", command=открыть_диалоговое_окно)
кнопка_открыть.pack(pady=20)

# Многострочное текстовое поле для отображения метаданных
текст_результата = tk.Text(корень, height=20, width=50, state=tk.DISABLED)
текст_результата.pack()

# Запуск главного цикла
корень.mainloop()
